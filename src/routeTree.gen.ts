/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as HistoriaIndexRouteImport } from './routes/historia/index'
import { Route as GaleriaIndexRouteImport } from './routes/galeria/index'
import { Route as CasosdeexitoIndexRouteImport } from './routes/casosdeexito/index'
import { Route as RequisitosResidenciaRouteImport } from './routes/requisitos/residencia'
import { Route as RequisitosAsociarseRouteImport } from './routes/requisitos/asociarse'
import { Route as FormulariosVoluntariadoRouteImport } from './routes/formularios/voluntariado'
import { Route as FormulariosDonacionRouteImport } from './routes/formularios/donacion'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const HistoriaIndexRoute = HistoriaIndexRouteImport.update({
  id: '/historia/',
  path: '/historia/',
  getParentRoute: () => rootRouteImport,
} as any)
const GaleriaIndexRoute = GaleriaIndexRouteImport.update({
  id: '/galeria/',
  path: '/galeria/',
  getParentRoute: () => rootRouteImport,
} as any)
const CasosdeexitoIndexRoute = CasosdeexitoIndexRouteImport.update({
  id: '/casosdeexito/',
  path: '/casosdeexito/',
  getParentRoute: () => rootRouteImport,
} as any)
const RequisitosResidenciaRoute = RequisitosResidenciaRouteImport.update({
  id: '/requisitos/residencia',
  path: '/requisitos/residencia',
  getParentRoute: () => rootRouteImport,
} as any)
const RequisitosAsociarseRoute = RequisitosAsociarseRouteImport.update({
  id: '/requisitos/asociarse',
  path: '/requisitos/asociarse',
  getParentRoute: () => rootRouteImport,
} as any)
const FormulariosVoluntariadoRoute = FormulariosVoluntariadoRouteImport.update({
  id: '/formularios/voluntariado',
  path: '/formularios/voluntariado',
  getParentRoute: () => rootRouteImport,
} as any)
const FormulariosDonacionRoute = FormulariosDonacionRouteImport.update({
  id: '/formularios/donacion',
  path: '/formularios/donacion',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/formularios/donacion': typeof FormulariosDonacionRoute
  '/formularios/voluntariado': typeof FormulariosVoluntariadoRoute
  '/requisitos/asociarse': typeof RequisitosAsociarseRoute
  '/requisitos/residencia': typeof RequisitosResidenciaRoute
  '/casosdeexito': typeof CasosdeexitoIndexRoute
  '/galeria': typeof GaleriaIndexRoute
  '/historia': typeof HistoriaIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/formularios/donacion': typeof FormulariosDonacionRoute
  '/formularios/voluntariado': typeof FormulariosVoluntariadoRoute
  '/requisitos/asociarse': typeof RequisitosAsociarseRoute
  '/requisitos/residencia': typeof RequisitosResidenciaRoute
  '/casosdeexito': typeof CasosdeexitoIndexRoute
  '/galeria': typeof GaleriaIndexRoute
  '/historia': typeof HistoriaIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/formularios/donacion': typeof FormulariosDonacionRoute
  '/formularios/voluntariado': typeof FormulariosVoluntariadoRoute
  '/requisitos/asociarse': typeof RequisitosAsociarseRoute
  '/requisitos/residencia': typeof RequisitosResidenciaRoute
  '/casosdeexito/': typeof CasosdeexitoIndexRoute
  '/galeria/': typeof GaleriaIndexRoute
  '/historia/': typeof HistoriaIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/formularios/donacion'
    | '/formularios/voluntariado'
    | '/requisitos/asociarse'
    | '/requisitos/residencia'
    | '/casosdeexito'
    | '/galeria'
    | '/historia'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/formularios/donacion'
    | '/formularios/voluntariado'
    | '/requisitos/asociarse'
    | '/requisitos/residencia'
    | '/casosdeexito'
    | '/galeria'
    | '/historia'
  id:
    | '__root__'
    | '/'
    | '/formularios/donacion'
    | '/formularios/voluntariado'
    | '/requisitos/asociarse'
    | '/requisitos/residencia'
    | '/casosdeexito/'
    | '/galeria/'
    | '/historia/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FormulariosDonacionRoute: typeof FormulariosDonacionRoute
  FormulariosVoluntariadoRoute: typeof FormulariosVoluntariadoRoute
  RequisitosAsociarseRoute: typeof RequisitosAsociarseRoute
  RequisitosResidenciaRoute: typeof RequisitosResidenciaRoute
  CasosdeexitoIndexRoute: typeof CasosdeexitoIndexRoute
  GaleriaIndexRoute: typeof GaleriaIndexRoute
  HistoriaIndexRoute: typeof HistoriaIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/historia/': {
      id: '/historia/'
      path: '/historia'
      fullPath: '/historia'
      preLoaderRoute: typeof HistoriaIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/galeria/': {
      id: '/galeria/'
      path: '/galeria'
      fullPath: '/galeria'
      preLoaderRoute: typeof GaleriaIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/casosdeexito/': {
      id: '/casosdeexito/'
      path: '/casosdeexito'
      fullPath: '/casosdeexito'
      preLoaderRoute: typeof CasosdeexitoIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/requisitos/residencia': {
      id: '/requisitos/residencia'
      path: '/requisitos/residencia'
      fullPath: '/requisitos/residencia'
      preLoaderRoute: typeof RequisitosResidenciaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/requisitos/asociarse': {
      id: '/requisitos/asociarse'
      path: '/requisitos/asociarse'
      fullPath: '/requisitos/asociarse'
      preLoaderRoute: typeof RequisitosAsociarseRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/formularios/voluntariado': {
      id: '/formularios/voluntariado'
      path: '/formularios/voluntariado'
      fullPath: '/formularios/voluntariado'
      preLoaderRoute: typeof FormulariosVoluntariadoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/formularios/donacion': {
      id: '/formularios/donacion'
      path: '/formularios/donacion'
      fullPath: '/formularios/donacion'
      preLoaderRoute: typeof FormulariosDonacionRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FormulariosDonacionRoute: FormulariosDonacionRoute,
  FormulariosVoluntariadoRoute: FormulariosVoluntariadoRoute,
  RequisitosAsociarseRoute: RequisitosAsociarseRoute,
  RequisitosResidenciaRoute: RequisitosResidenciaRoute,
  CasosdeexitoIndexRoute: CasosdeexitoIndexRoute,
  GaleriaIndexRoute: GaleriaIndexRoute,
  HistoriaIndexRoute: HistoriaIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
